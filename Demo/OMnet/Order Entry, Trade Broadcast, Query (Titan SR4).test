<?xml version="1.1" encoding="ASCII"?>
<TestUnit:TestContainerType xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CertificationCommands="com.esprow.nozomi.testunit.commands.certification" xmlns:TestUnit="com.esprow.nozomi.testunit" formatVersion="2.1">
  <test certificationUnit="true" dictionary="OMnet" implementsBridgeMode="true">
    <testCommand xsi:type="CertificationCommands:CreateMessageRelayCommand" targetSystemId="%CONFIGURATIONS.CERTIFICATION.SYSTEM%" targetHandlerId="%CONFIGURATIONS.CERTIFICATION.DESTINATION%" forwardSystemId="%CONFIGURATIONS.CERTIFICATION.BRIDGE.SYSTEM%" forwardHandlerId="%CONFIGURATIONS.CERTIFICATION.BRIDGE.DESTINATION%" filterShowOnly="true" validateMessages="true">
      <messageTypeFilters>MO1</messageTypeFilters>
      <messageTypeFilters>TRANSACTION_ANSWER</messageTypeFilters>
      <messageTypeFilters>BO5</messageTypeFilters>
      <messageTypeFilters>BD6</messageTypeFilters>
      <messageTypeFilters>MQ92</messageTypeFilters>
      <messageTypeFilters>MA92</messageTypeFilters>
    </testCommand>
    <testCommand xsi:type="TestUnit:GetInteractiveFeedbackCommand">
      <instructionMultiLanguage key="en" value="Please make sure that you are connected to the OMnet gateway, and that you have subscribed to BD6 broadcasts.&#xD;&#xA;"/>
    </testCommand>
    <testCommand xsi:type="TestUnit:GetInteractiveFeedbackCommand">
      <instructionMultiLanguage key="en" value="You have been assigned the following instrument series and market for this test:&#xD;&#xA;&#xD;&#xA;   Series: ABC01&#xD;&#xA;   Market: AB"/>
    </testCommand>
    <testCommand xsi:type="TestUnit:GetInteractiveFeedbackCommand">
      <instructionMultiLanguage key="en" value="Please submit a Limit Order with Day validity using MO1."/>
    </testCommand>
    <testCommand xsi:type="TestUnit:WaitCommand" messageSenderProducer="//@test/@testCommand.0" messageCount="1" timeout="-1" searchFromLastMatch="true">
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="single_order_insert_t[].single_order_insert_t.transaction_type[].transaction_type_t.central_module_c" value="M" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="single_order_insert_t[].single_order_insert_t.transaction_type[].transaction_type_t.server_type_c" value="O" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="single_order_insert_t[].single_order_insert_t.transaction_type[].transaction_type_t.transaction_number_n" value="1" fieldType="BigDecimal"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="vim_subitems[].vim_subitem[*].basic_order_t[].basic_order_t.time_validity_n" value="256" fieldType="BigDecimal"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="vim_subitems[].vim_subitem[*].basic_order_t[].basic_order_t.order_type_c" value="1" fieldType="BigDecimal"/>
      <messageType>MO1</messageType>
    </testCommand>
    <testCommand xsi:type="TestUnit:WaitCommand" messageSenderProducer="//@test/@testCommand.0" messageCount="1" timeout="-1" searchFromLastMatch="true" outgoingMessage="true">
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="StandardHeader.header_response_t[].header_response_t.return_value_i" value="0" fieldType="Integer"/>
      <messageType>TRANSACTION_ANSWER</messageType>
    </testCommand>
    <testCommand xsi:type="TestUnit:GetInteractiveFeedbackCommand">
      <instructionMultiLanguage key="en" value="Please wait until the conformance support team trades off with your order. Afterwards, make sure you receive a BD6 broadcast about the trade."/>
    </testCommand>
    <testCommand xsi:type="CertificationCommands:NotifyAdminCommand" comment="A counterparty is executing a test and requires assistance.&#xD;&#xA;&#xD;&#xA;Member:&#xD;&#xA;   Country ID: HK&#xD;&#xA;   Identity: XY001&#xD;&#xA;Series: ABC01&#xD;&#xA;Market: AB&#xD;&#xA;Test: Order Entry, Trade Broadcast, Query.test&#xD;&#xA;&#xD;&#xA;Required action(s):&#xD;&#xA;- Trade off with the order that the member has just submitted.&#xD;&#xA;&#xD;&#xA;Note: Please resolve this ticket as soon you have completed the required actions, otherwise the counterparty will not be able to continue the test." message="Trade off with member's order" level="URGENT" waitForResolution="true"/>
    <testCommand xsi:type="TestUnit:WaitCommand" messageSenderProducer="//@test/@testCommand.0" messageCount="1" timeout="-1" searchFromLastMatch="true" outgoingMessage="true">
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="broadcast_hdr_t[].broadcast_hdr_t.broadcast_type[].broadcast_type_t.central_module_c" value="B" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="broadcast_hdr_t[].broadcast_hdr_t.broadcast_type[].broadcast_type_t.server_type_c" value="D" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="broadcast_hdr_t[].broadcast_hdr_t.broadcast_type[].broadcast_type_t.transaction_number_n" value="6" fieldType="BigDecimal"/>
      <messageType>BD6</messageType>
    </testCommand>
    <testCommand xsi:type="TestUnit:GetInteractiveFeedbackCommand" variableId="Response" requireUserInput="true">
      <instructionMultiLanguage key="en" value="Did you receive the BD6 broadcast with information about the trade?&#xD;&#xA;(Enter y for yes, n for no)"/>
    </testCommand>
    <testCommand xsi:type="TestUnit:IfStatementCommand">
      <testCommand xsi:type="TestUnit:IfThenElseStatementBlock" logicStatement="eval(&quot;! equalsIgnoreCase(&quot;%VARIABLES.Response%&quot;, &quot;y&quot;) &amp;&amp; ! equalsIgnoreCase(&quot;%VARIABLES.Response%&quot;, &quot;yes&quot;)&quot;)">
        <testCommand xsi:type="TestUnit:FailCommand" text="You should have received the BD6 broadcast with information about the trade."/>
      </testCommand>
    </testCommand>
    <testCommand xsi:type="TestUnit:GetInteractiveFeedbackCommand">
      <instructionMultiLanguage key="en" value="Please submit an MQ92 query to retrieve your own orders."/>
    </testCommand>
    <testCommand xsi:type="TestUnit:WaitCommand" messageSenderProducer="//@test/@testCommand.0" messageCount="1" timeout="-1" searchFromLastMatch="true">
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="query_order_private_filter_t[].query_order_private_filter_t.transaction_type[].transaction_type_t.central_module_c" value="M" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="query_order_private_filter_t[].query_order_private_filter_t.transaction_type[].transaction_type_t.server_type_c" value="Q" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="query_order_private_filter_t[].query_order_private_filter_t.transaction_type[].transaction_type_t.transaction_number_n" value="92" fieldType="BigDecimal"/>
      <messageType>MQ92</messageType>
    </testCommand>
    <testCommand xsi:type="TestUnit:WaitCommand" messageSenderProducer="//@test/@testCommand.0" messageCount="1" timeout="-1" searchFromLastMatch="true" outgoingMessage="true">
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="answer_order_hdr_t[].answer_order_hdr_t.transaction_type[].transaction_type_t.central_module_c" value="M" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="answer_order_hdr_t[].answer_order_hdr_t.transaction_type[].transaction_type_t.server_type_c" value="A" fieldType="Char"/>
      <testCommand xsi:type="TestUnit:CreateFieldValueCheckCommand" path="answer_order_hdr_t[].answer_order_hdr_t.transaction_type[].transaction_type_t.transaction_number_n" value="92" fieldType="BigDecimal"/>
      <messageType>MA92</messageType>
    </testCommand>
  </test>
</TestUnit:TestContainerType>
